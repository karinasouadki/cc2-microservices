/*
 * Payment system
 * Set up a system for receiving a payment request transaction
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Buyer;
import org.openapitools.client.model.CreditCard;
import org.openapitools.client.model.PaymentOrder;

/**
 * PaymentRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-01T20:39:34.656749+02:00[Europe/Paris]")
public class PaymentRequest {
  public static final String SERIALIZED_NAME_CHACKOUT_ID = "chackoutId";
  @SerializedName(SERIALIZED_NAME_CHACKOUT_ID)
  private String chackoutId;

  public static final String SERIALIZED_NAME_BUYER_INFO = "buyerInfo";
  @SerializedName(SERIALIZED_NAME_BUYER_INFO)
  private Buyer buyerInfo;

  public static final String SERIALIZED_NAME_CREDIT_CARD_INFO = "creditCardInfo";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_INFO)
  private CreditCard creditCardInfo;

  public static final String SERIALIZED_NAME_PAYMENT_ORDERS = "paymentOrders";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ORDERS)
  private List<PaymentOrder> paymentOrders = null;


  public PaymentRequest chackoutId(String chackoutId) {
    
    this.chackoutId = chackoutId;
    return this;
  }

   /**
   * Get chackoutId
   * @return chackoutId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6547", value = "")

  public String getChackoutId() {
    return chackoutId;
  }


  public void setChackoutId(String chackoutId) {
    this.chackoutId = chackoutId;
  }


  public PaymentRequest buyerInfo(Buyer buyerInfo) {
    
    this.buyerInfo = buyerInfo;
    return this;
  }

   /**
   * Get buyerInfo
   * @return buyerInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Buyer getBuyerInfo() {
    return buyerInfo;
  }


  public void setBuyerInfo(Buyer buyerInfo) {
    this.buyerInfo = buyerInfo;
  }


  public PaymentRequest creditCardInfo(CreditCard creditCardInfo) {
    
    this.creditCardInfo = creditCardInfo;
    return this;
  }

   /**
   * Get creditCardInfo
   * @return creditCardInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CreditCard getCreditCardInfo() {
    return creditCardInfo;
  }


  public void setCreditCardInfo(CreditCard creditCardInfo) {
    this.creditCardInfo = creditCardInfo;
  }


  public PaymentRequest paymentOrders(List<PaymentOrder> paymentOrders) {
    
    this.paymentOrders = paymentOrders;
    return this;
  }

  public PaymentRequest addPaymentOrdersItem(PaymentOrder paymentOrdersItem) {
    if (this.paymentOrders == null) {
      this.paymentOrders = new ArrayList<PaymentOrder>();
    }
    this.paymentOrders.add(paymentOrdersItem);
    return this;
  }

   /**
   * Get paymentOrders
   * @return paymentOrders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PaymentOrder> getPaymentOrders() {
    return paymentOrders;
  }


  public void setPaymentOrders(List<PaymentOrder> paymentOrders) {
    this.paymentOrders = paymentOrders;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentRequest paymentRequest = (PaymentRequest) o;
    return Objects.equals(this.chackoutId, paymentRequest.chackoutId) &&
        Objects.equals(this.buyerInfo, paymentRequest.buyerInfo) &&
        Objects.equals(this.creditCardInfo, paymentRequest.creditCardInfo) &&
        Objects.equals(this.paymentOrders, paymentRequest.paymentOrders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chackoutId, buyerInfo, creditCardInfo, paymentOrders);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentRequest {\n");
    sb.append("    chackoutId: ").append(toIndentedString(chackoutId)).append("\n");
    sb.append("    buyerInfo: ").append(toIndentedString(buyerInfo)).append("\n");
    sb.append("    creditCardInfo: ").append(toIndentedString(creditCardInfo)).append("\n");
    sb.append("    paymentOrders: ").append(toIndentedString(paymentOrders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

